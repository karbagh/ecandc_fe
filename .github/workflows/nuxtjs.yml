name: CI/CD Pipeline for Nuxt.js with Yarn

on:
  push:
    branches:
      - master  # Trigger on push to master branch
  pull_request:
    branches:
      - master  # Trigger on pull requests to master (optional)

jobs:
  build:
    runs-on: ecandc
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # Updated to v3 for better reliability

      - name: Set up Node.js
        uses: actions/setup-node@v3  # Updated to v3
        with:
          node-version: '16'  # Adjust based on your Nuxt.js requirements

      - name: Cache Yarn dependencies
        uses: actions/cache@v3  # Updated to v3
        with:
          path: ~/.yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies with Yarn
        run: yarn install --frozen-lockfile  # Ensures consistent installs

      - name: Build Nuxt.js app for production
        run: yarn run build  # Builds for production; adjust if your script differs

      - name: Prepare production files
        run: |
          mkdir -p dist
          cp -r .nuxt dist/.nuxt  # Copy Nuxt build files
          cp -r static dist/static  # Copy static assets
          cp package.json dist/  # Include package.json for production
          cp yarn.lock dist/  # Include yarn.lock for dependency consistency

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: nuxt-dist
          path: dist/

  deploy:
    runs-on: ecandc
    needs: build  # Depends on successful build job
    if: github.event_name == 'push'  # Only run deploy on push, not PRs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download production artifacts
        uses: actions/download-artifact@v3
        with:
          name: nuxt-dist
          path: dist/

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v1.0.0  # Updated to latest version
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            # Navigate to deployment directory
            cd /var/www/nuxt-app || exit
            # Ensure directory is clean
            rm -rf dist || true
            mkdir -p dist
            # Move built files (assuming runner uploads them)
            # Note: Adjust this if you use rsync or another method
            yarn install --frozen-lockfile --production || exit
            # Restart or start the app with pm2
            pm2 restart nuxt-app || pm2 start yarn --name nuxt-app -- run start
